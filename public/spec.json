{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample Mockup server.",
    "version": "1.0.0",
    "title": "Great Cod Recipes (Yummie)",
    "termsOfService": "http://helloreverb.com/terms/",
    "contact": {
      "name": "miguel.ramos@yieldify.com"
    }
  },
  "host": "127.0.0.1:8002",
  "schemes": [
    "http"
  ],
  "paths": {
    "/recipes": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "Get recipes collection",
        "description": "Returns recipes collection.",
        "operationId": "getRecipes",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "level",
            "description": "Level to search for",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "description": "Full text search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_start",
            "description": "Show from",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_end",
            "description": "Show to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_limit",
            "description": "Limit of records",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_sort",
            "description": "Sort records by field",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_order",
            "description": "Order by ASC or DESC",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Recipes not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/recipes"
            }
          }
        }
      }
    },
    "/recipes/{recipeId}": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "Find a recipe in collection.",
        "description": "Returns a recipe.",
        "operationId": "findRecipe",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "description": "ID of recipe that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Recipe not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/recipes"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/recipes/{recipeId}/ingredients": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "Get the ingredients for a recipe in collection.",
        "description": "Returns a ingredients.",
        "operationId": "findRecipeIngredients",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "description": "ID of recipe that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Ingredients not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ingredients"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/recipes/{recipeId}/wines": {
      "get": {
        "tags": [
          "recipes"
        ],
        "summary": "Get the wines for a recipe in collection.",
        "description": "Returns a wines.",
        "operationId": "findRecipeWine",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "description": "ID of recipe that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Wines not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/wines"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/wines": {
      "get": {
        "tags": [
          "wines"
        ],
        "summary": "Get wines collection",
        "description": "Returns wines collection.",
        "operationId": "getWines",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "description": "Year to search for",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "description": "Full text search",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_start",
            "description": "Show from",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_end",
            "description": "Show to",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_limit",
            "description": "Limit of records",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "_sort",
            "description": "Sort records by field",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "_order",
            "description": "Order by ASC or DESC",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "Wines not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/wines"
            }
          }
        }
      }
    },
    "/wines/{wineId}": {
      "get": {
        "tags": [
          "wines"
        ],
        "summary": "Find a wine in collection.",
        "description": "Returns a wine.",
        "operationId": "findWine",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "wineId",
            "description": "ID of wine that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Wine not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/wines"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          }
        }
      }
    },
    "/ingredients": {
      "post": {
        "tags": ["ingredients"],
        "summary": "Insert ingredients related to recipes.",
        "description": "Insert ingredients.",
        "operationId": "addIngredients",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "info",
            "description": "Information about the ingredient.",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "recipeId",
            "description": "Related to recipe id.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "404": {
            "description": "Ingredient not found"
          },
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ingredients"
            }
          },
          "405": {
            "description": "Invalid ID supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "recipes": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "level": {
          "type": "string"
        }
      }
    },
    "ingredients": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "info": {
          "type": "string"
        },
        "recipeId": {
          "type": "integer"
        }
      }
    },
    "wines": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "year": {
          "type": "string"
        },
        "recipeId": {
          "type": "integer"
        }
      }
    }
  }
}